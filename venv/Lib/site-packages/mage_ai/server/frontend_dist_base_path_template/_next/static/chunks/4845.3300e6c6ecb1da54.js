(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4845],{34845:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return ee}});var n,i,u,o,a,E=r(51774),s=r.n(E),p=r(11611),d=r(63747),c=r.n(d),R=r(82394),N=r(57653),l=r(44425);!function(e){e.RAG="rag"}(o||(o={})),function(e){e.ANSWER_ENRICHMENT="answer_enrichment",e.CHUNKING="chunking",e.CLEANING="cleaning",e.CONTEXTUALIZATION="contextualization",e.CONTEXTUAL_DICTIONARY="contextual_dictionary",e.DATA_PREPARATION="data_preparation",e.DOCUMENT_HIERARCHY="document_hierarchy",e.EMBED="embed",e.ENRICH="enrich",e.EXPORT="export",e.INDEX="index",e.INFERENCE="inference",e.INGEST="ingest",e.INTENT_DETECTION="intent_detection",e.ITERATIVE_RETRIEVAL="iterative_retrieval",e.KNOWLEDGE_GRAPH="knowledge_graph",e.LOAD="load",e.MAP="map",e.MEMORY="memory",e.MULTI_HOP_REASONING="multi_hop_reasoning",e.QUERY_AUGMENTATION="query_augmentation",e.QUERY_DECOMPOSITION="query_decomposition",e.QUERY_PROCESSING="query_processing",e.RANKING="ranking",e.RESPONSE_FORMATTING="response_formatting",e.RESPONSE_GENERATION="response_generation",e.RESPONSE_SYNTHESIS="response_synthesis",e.RETRIEVAL="retrieval",e.SEARCH_INDEX="search_index",e.TOKENIZATION="tokenization",e.TRANSFORM="transform",e.VECTOR_DATABASE="vector_database",e.NONE="none"}(a||(a={}));u={},(0,R.Z)(u,a.DATA_PREPARATION,(n={},(0,R.Z)(n,a.LOAD,[a.INGEST,a.MAP]),(0,R.Z)(n,a.TRANSFORM,[a.CLEANING,a.ENRICH,a.CHUNKING,a.TOKENIZATION,a.EMBED]),(0,R.Z)(n,a.EXPORT,[a.VECTOR_DATABASE,a.KNOWLEDGE_GRAPH]),(0,R.Z)(n,a.INDEX,[a.CONTEXTUAL_DICTIONARY,a.DOCUMENT_HIERARCHY,a.SEARCH_INDEX]),n)),(0,R.Z)(u,a.INFERENCE,(i={},(0,R.Z)(i,a.QUERY_PROCESSING,[a.INTENT_DETECTION,a.QUERY_DECOMPOSITION,a.QUERY_AUGMENTATION]),(0,R.Z)(i,a.RETRIEVAL,[a.ITERATIVE_RETRIEVAL,a.MEMORY,a.MULTI_HOP_REASONING,a.RANKING]),(0,R.Z)(i,a.RESPONSE_GENERATION,[a.CONTEXTUALIZATION,a.RESPONSE_SYNTHESIS,a.ANSWER_ENRICHMENT,a.RESPONSE_FORMATTING]),i));var O=r(81728);function T(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?T(Object(r),!0).forEach((function(t){(0,R.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):T(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var I,_,A,b,f,y={name:"Load unstructured data",uuid:(0,O.kE)("Load unstructured data"),type:N.qL.PYTHON,blocks:[{name:"Ingest titanic data",type:l.tf.DATA_LOADER,groups:[a.INGEST]},{name:"Serialize and map documents",type:l.tf.DATA_LOADER,groups:[a.MAP]}].map((function(e){return m(m({},e),{},{uuid:(0,O.kE)(e.name)})}))},P={name:"Transform a ton of documents",uuid:(0,O.kE)("Transform a ton of documents"),type:N.qL.PYTHON,blocks:[{name:"Clean column names",type:l.tf.TRANSFORMER,groups:[a.CLEANING]},{name:"Add 3rd party data",type:l.tf.TRANSFORMER,groups:[a.ENRICH]},{name:"Sliding window chunker",type:l.tf.TRANSFORMER,groups:[a.CHUNKING]},{name:"Subword tokenizer",type:l.tf.TRANSFORMER,groups:[a.TOKENIZATION],configuration:{templates:{subword_tokenizer:{variables:{hallucination:10,fire:"water",spell:!0}},word_tokenizer:{variables:{spacing:"none",max_length:100,add_special_tokens:!0}}}}},{name:"Instructor embeddings",type:l.tf.TRANSFORMER,groups:[a.EMBED],configuration:{templates:{bert_embedding:{variables:{bert_embeddings_uuid:"abc"}},word2vec_embedding:{variables:{word2vec_embeddings_uuid:"def"}}}}}].map((function(e){return m(m({},e),{},{uuid:(0,O.kE)(e.name)})}))},S={name:"Export and store data forever",uuid:(0,O.kE)("Export and store data forever"),type:N.qL.PYTHON,blocks:[{name:"Store relationships in Neo4J",type:l.tf.DATA_EXPORTER,groups:[a.KNOWLEDGE_GRAPH]},{name:"Store embeddings PGVector",type:l.tf.DATA_EXPORTER,groups:[a.VECTOR_DATABASE]}].map((function(e){return m(m({},e),{},{uuid:(0,O.kE)(e.name)})}))},g={name:"Optimize data for search and APIs",uuid:(0,O.kE)("Optimize data for search and APIs"),type:N.qL.PYTHON,blocks:[{name:"Create Contextual Dictionary",type:l.tf.CUSTOM,groups:[a.CONTEXTUAL_DICTIONARY]},{name:"Create Document Hierarchy",type:l.tf.CUSTOM,groups:[a.DOCUMENT_HIERARCHY]},{name:"Search index using FAISS",type:l.tf.CUSTOM,groups:[a.SEARCH_INDEX]}].map((function(e){return m(m({},e),{},{uuid:(0,O.kE)(e.name)})}))},k={name:"Interpret user prompt",uuid:"interpret_user_prompt",type:N.qL.PYTHON,blocks:[{name:"Understand user intentions",type:l.tf.DATA_LOADER,groups:[a.INTENT_DETECTION]},{name:"Detect malicious intent",type:l.tf.DATA_LOADER,groups:[a.INTENT_DETECTION]},{name:"Add guardrails",type:l.tf.DATA_LOADER,groups:[a.INTENT_DETECTION]},{name:"Decompose user query",type:l.tf.DATA_LOADER,groups:[a.QUERY_DECOMPOSITION]},{name:"Improve user query prompts",type:l.tf.DATA_LOADER,groups:[a.QUERY_AUGMENTATION]},{name:"Augment user query with context",type:l.tf.DATA_LOADER,groups:[a.QUERY_AUGMENTATION]}].map((function(e){return m(m({},e),{},{uuid:(0,O.kE)(e.name)})}))},D={name:"Retrieve numerous documents from company",uuid:(0,O.kE)("Retrieve numerous documents from company"),type:N.qL.PYTHON,blocks:[{name:"Page-Based Recursive Retrieval",groups:[a.ITERATIVE_RETRIEVAL],type:l.tf.TRANSFORMER},{name:"Information-Centric Recursive Retrieval",groups:[a.ITERATIVE_RETRIEVAL],type:l.tf.TRANSFORMER},{name:"Concept-Centric Recursive Retrieval",groups:[a.ITERATIVE_RETRIEVAL],type:l.tf.TRANSFORMER},{name:"Fetch Wikipedia articles for memory",groups:[a.MEMORY],type:l.tf.CUSTOM},{name:"Multi-hop reasoning and logic",groups:[a.MULTI_HOP_REASONING],type:l.tf.TRANSFORMER},{name:"ReRanking",groups:[a.RANKING],type:l.tf.TRANSFORMER},{name:"Hybrid Search",groups:[a.RANKING],type:l.tf.TRANSFORMER},{name:"Query Expansion",groups:[a.RANKING],type:l.tf.TRANSFORMER}].map((function(e){return m(m({},e),{},{uuid:(0,O.kE)(e.name)})}))},v={name:"Generate great answers for user",uuid:(0,O.kE)("Generate great answers for user"),type:N.qL.PYTHON,blocks:[{name:"Add documents to context for LLM",groups:[a.CONTEXTUALIZATION],type:l.tf.DATA_EXPORTER},{name:"Synthesize response from model",groups:[a.RESPONSE_SYNTHESIS],type:l.tf.DATA_EXPORTER},{name:"Add custom information to response",groups:[a.ANSWER_ENRICHMENT],type:l.tf.DATA_EXPORTER},{name:"Add source links to response",groups:[a.ANSWER_ENRICHMENT],type:l.tf.DATA_EXPORTER},{name:"Explain how the model got the answer",groups:[a.ANSWER_ENRICHMENT],type:l.tf.DATA_EXPORTER},{name:"Parse model query and present",groups:[a.RESPONSE_FORMATTING],type:l.tf.DATA_EXPORTER}].map((function(e){return m(m({},e),{},{uuid:(0,O.kE)(e.name)})}))},C={name:"Data pre-processing pipeline",uuid:(0,O.kE)("Data pre-processing pipeline"),type:N.qL.PYTHON,blocks:[{name:"Data-prep ".concat(y.uuid," pipeline"),uuid:y.uuid,type:l.tf.PIPELINE},{name:"Data-prep ".concat(P.uuid," pipeline"),uuid:P.uuid,type:l.tf.PIPELINE},{name:"Data-prep ".concat(S.uuid," pipeline"),uuid:S.uuid,type:l.tf.PIPELINE},{name:"Data-prep ".concat(g.uuid," pipeline"),uuid:g.uuid,type:l.tf.PIPELINE}]},G={name:"Super cool inference pipeline",uuid:(0,O.kE)("Super cool inference pipeline"),type:N.qL.PYTHON,blocks:[{name:"My custom ".concat(k.uuid," pipeline"),uuid:k.uuid,type:l.tf.PIPELINE},{name:"My custom ".concat(D.uuid," pipeline"),uuid:D.uuid,type:l.tf.PIPELINE},{name:"My custom ".concat(v.uuid," pipeline"),uuid:v.uuid,type:l.tf.PIPELINE}]},L={name:"Mager RAGer pipeline",uuid:(0,O.kE)("Mager RAGer pipeline"),type:N.qL.PYTHON,execution_framework:o.RAG,blocks:[{name:"Main top-level ".concat(C.uuid," pipeline"),uuid:C.uuid,type:l.tf.PIPELINE},{name:"Main top-level ".concat(G.uuid," pipeline"),uuid:G.uuid,type:l.tf.PIPELINE}]},M=r(54193);function U(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function w(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?U(Object(r),!0).forEach((function(t){(0,R.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):U(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var h,H,x,j,F={uuid:a.LOAD,groups:[a.LOAD],type:N.qL.EXECUTION_FRAMEWORK,blocks:null===(I=[{uuid:a.INGEST,type:l.tf.GROUP,upstream_blocks:[],downstream_blocks:[a.MAP],configuration:{templates:{files:{description:"Load files",name:"Local file loader",variables:{path:{inputs:{text:{description:"Path to file directory",label:"Directory path",options:null,style:{monospace:!0},text:[],type:M.bB.TEXT_FIELD}},variables:{path:{description:"Already explained",input:"text",name:"Path to file directory",required:!0,types:[M.zj.STRING]}}}}},github:{description:"Fetch GitHub repository",name:"GitHub repository loader",variables:{path:{inputs:{text:{description:"GitHub repository URL",label:"Repo URL",options:null,style:{monospace:!0},text:[],type:M.bB.TEXT_FIELD}},variables:{url:{description:"Already explained",input:"text",name:"Address of the repository",required:!0,types:[M.zj.STRING]}}}}}}}},{uuid:a.MAP,type:l.tf.GROUP,upstream_blocks:[a.INGEST],downstream_blocks:[]}])||void 0===I?void 0:I.map((function(e){return w(w({},e),{},{name:(0,O.vg)(e.uuid)})}))},Y={uuid:a.TRANSFORM,groups:[a.TRANSFORM],type:N.qL.EXECUTION_FRAMEWORK,blocks:null===(_=[{uuid:a.CLEANING,type:l.tf.GROUP,upstream_blocks:[],downstream_blocks:[a.ENRICH]},{uuid:a.ENRICH,type:l.tf.GROUP,upstream_blocks:[a.CLEANING],downstream_blocks:[a.CHUNKING]},{uuid:a.CHUNKING,type:l.tf.GROUP,upstream_blocks:[a.ENRICH],downstream_blocks:[a.TOKENIZATION],configuration:{dynamic:{parent:!0,modes:[l.vk.STREAM]},variables:{upstream:(0,R.Z)({},a.CHUNKING,{input_data_types:[l.c0.GENERATOR]})}}},{uuid:a.TOKENIZATION,type:l.tf.GROUP,upstream_blocks:[a.CHUNKING],downstream_blocks:[a.EMBED],configuration:{templates:{subword_tokenizer:{name:"Subword tokenizer",description:"Tokenize text into subwords",variables:["hallucination","fire","spell","max_length","add_special_tokens"].reduce((function(e,t){return w(w({},e),{},(0,R.Z)({},t,{input:{description:"...",label:"".concat(t," - ").concat(Number(new Date)),options:[{label:"".concat(t," - ").concat(Number(new Date)),value:"none"}],type:M.bB.DROPDOWN_MENU},variable:{description:"...",name:"...",required:!0,types:[M.zj.STRING]}}))}),{})},word_tokenizer:{name:"Word Tokenizer",description:"Tokenize text into words",variables:["hallucination_variable","fire_variable","spell_variable","max_length_variable","add_special_tokens_variable"].reduce((function(e,t){return w(w({},e),{},(0,R.Z)({},t,{input:{description:"Enter the text you want to tokenize into words.",label:"".concat(t," - ").concat(Number(new Date)),style:{multiline:!0},type:M.bB.TEXT_FIELD},variable:{description:"The variable to store the tokenized words.",name:"tokenized_words",required:!0,types:[M.zj.STRING],uuid:""}}))}),{})}}}},{uuid:a.EMBED,type:l.tf.GROUP,upstream_blocks:[a.TOKENIZATION],configuration:{templates:{bert_embedding:{name:"BERT Embedding",description:"Generate BERT embeddings for the provided text.",variables:{bert_embeddings_uuid:{input:{description:"Input text for BERT embeddings.",label:"Text Input",style:{multiline:!0},type:M.bB.TEXT_FIELD},variable:{description:"The variable to store BERT embeddings.",name:"bert_embeddings",required:!0,types:[M.zj.DATE]}}}},word2vec_embedding:{name:"Word2Vec Embedding",description:"Generate Word2Vec embeddings for the provided text.",variables:{word2vec_embeddings_uuid:{input:{description:"Input text for Word2Vec embeddings.",label:"Text Input",style:{multiline:!0},type:M.bB.TEXT_FIELD},variable:{description:"The variable to store Word2Vec embeddings.",name:"word2vec_embeddings",required:!0,types:[M.zj.DATE]}}}}}}}])||void 0===_?void 0:_.map((function(e){return w(w({},e),{},{name:(0,O.vg)(e.uuid)})}))},X={uuid:a.EXPORT,groups:[a.EXPORT],type:N.qL.EXECUTION_FRAMEWORK,blocks:null===(A=[{uuid:a.KNOWLEDGE_GRAPH,type:l.tf.GROUP},{uuid:a.VECTOR_DATABASE,type:l.tf.GROUP}])||void 0===A?void 0:A.map((function(e){return w(w({},e),{},{name:(0,O.vg)(e.uuid)})}))},K={uuid:a.INDEX,groups:[a.INDEX],type:N.qL.EXECUTION_FRAMEWORK,blocks:null===(b=[{uuid:a.CONTEXTUAL_DICTIONARY,type:l.tf.GROUP},{uuid:a.DOCUMENT_HIERARCHY,type:l.tf.GROUP},{uuid:a.SEARCH_INDEX,type:l.tf.GROUP}])||void 0===b?void 0:b.map((function(e){return w(w({},e),{},{name:(0,O.vg)(e.uuid)})}))},q={uuid:a.DATA_PREPARATION,type:N.qL.EXECUTION_FRAMEWORK,groups:[a.DATA_PREPARATION],execution_framework:o.RAG,blocks:null===(f=[{uuid:F.uuid,type:l.tf.PIPELINE,upstream_blocks:[],downstream_blocks:[Y.uuid]},{uuid:Y.uuid,type:l.tf.PIPELINE,upstream_blocks:[F.uuid],downstream_blocks:[X.uuid]},{uuid:X.uuid,type:l.tf.PIPELINE,upstream_blocks:[Y.uuid],downstream_blocks:[K.uuid]},{uuid:K.uuid,type:l.tf.PIPELINE,upstream_blocks:[X.uuid],downstream_blocks:[]}])||void 0===f?void 0:f.map((function(e){return w(w({},e),{},{name:(0,O.vg)(e.uuid)})}))};function V(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function W(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?V(Object(r),!0).forEach((function(t){(0,R.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):V(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Z={uuid:a.QUERY_PROCESSING,groups:[a.QUERY_PROCESSING],type:N.qL.EXECUTION_FRAMEWORK,blocks:null===(h=[{uuid:a.INTENT_DETECTION,type:l.tf.GROUP,upstream_blocks:[],downstream_blocks:[a.QUERY_DECOMPOSITION]},{uuid:a.QUERY_DECOMPOSITION,type:l.tf.GROUP,upstream_blocks:[a.INTENT_DETECTION],downstream_blocks:[a.QUERY_AUGMENTATION]},{uuid:a.QUERY_AUGMENTATION,type:l.tf.GROUP,upstream_blocks:[a.QUERY_DECOMPOSITION],downstream_blocks:[]}])||void 0===h?void 0:h.map((function(e){return W(W({},e),{},{name:(0,O.vg)(e.uuid)})}))},z={uuid:a.RETRIEVAL,groups:[a.RETRIEVAL],type:N.qL.EXECUTION_FRAMEWORK,blocks:null===(H=[{uuid:a.MEMORY,type:l.tf.GROUP,upstream_blocks:[],downstream_blocks:[a.ITERATIVE_RETRIEVAL]},{uuid:a.ITERATIVE_RETRIEVAL,type:l.tf.GROUP,upstream_blocks:[a.MEMORY],downstream_blocks:[a.MULTI_HOP_REASONING]},{uuid:a.MULTI_HOP_REASONING,type:l.tf.GROUP,upstream_blocks:[a.ITERATIVE_RETRIEVAL],downstream_blocks:[a.RANKING]},{uuid:a.RANKING,type:l.tf.GROUP,upstream_blocks:[a.MULTI_HOP_REASONING],downstream_blocks:[]}])||void 0===H?void 0:H.map((function(e){return W(W({},e),{},{name:(0,O.vg)(e.uuid)})}))},B={uuid:a.RESPONSE_GENERATION,groups:[a.RESPONSE_GENERATION],type:N.qL.EXECUTION_FRAMEWORK,blocks:null===(x=[{uuid:a.CONTEXTUALIZATION,type:l.tf.GROUP,upstream_blocks:[],downstream_blocks:[a.RESPONSE_SYNTHESIS]},{uuid:a.RESPONSE_SYNTHESIS,type:l.tf.GROUP,upstream_blocks:[a.CONTEXTUALIZATION],downstream_blocks:[a.ANSWER_ENRICHMENT]},{uuid:a.ANSWER_ENRICHMENT,type:l.tf.GROUP,upstream_blocks:[a.RESPONSE_SYNTHESIS],downstream_blocks:[a.RESPONSE_FORMATTING]},{uuid:a.RESPONSE_FORMATTING,upstream_blocks:[a.ANSWER_ENRICHMENT],type:l.tf.GROUP}])||void 0===x?void 0:x.map((function(e){return W(W({},e),{},{name:(0,O.vg)(e.uuid)})}))},Q={uuid:a.INFERENCE,type:N.qL.EXECUTION_FRAMEWORK,groups:[a.INFERENCE],execution_framework:o.RAG,blocks:null===(j=[{uuid:Z.uuid,type:l.tf.PIPELINE,upstream_blocks:[],downstream_blocks:[z.uuid]},{uuid:z.uuid,type:l.tf.PIPELINE,upstream_blocks:[Z.uuid],downstream_blocks:[B.uuid]},{uuid:B.uuid,type:l.tf.PIPELINE,upstream_blocks:[z.uuid],downstream_blocks:[]}])||void 0===j?void 0:j.map((function(e){return W(W({},e),{},{name:(0,O.vg)(e.uuid)})}))},J={uuid:o.RAG,type:N.qL.EXECUTION_FRAMEWORK,blocks:[{uuid:q.uuid,type:l.tf.PIPELINE},{uuid:Q.uuid,type:l.tf.PIPELINE}]},$=r(28598);function ee(){var e=s()((function(){return Promise.all([r.e(3860),r.e(2791),r.e(4659),r.e(5503)]).then(r.bind(r,33558))}),{ssr:!1,loadableGenerated:{webpack:function(){return[33558]}}});return(0,$.jsx)("div",{className:c().container,children:(0,$.jsxs)(p.Z,{autoColumns:"auto",height:"inherit",templateRows:"auto 1fr auto",width:"100%",children:[(0,$.jsx)("div",{}),(0,$.jsxs)(p.Z,{autoRows:"auto",height:"inherit",templateColumns:"auto 1fr",width:"100%",children:[(0,$.jsx)("div",{}),(0,$.jsx)(e,{pipeline:L,pipelineExecutionFramework:J,pipelineExecutionFrameworks:[q,X,K,Q,F,Z,B,z,Y],pipelines:[C,S,g,G,y,k,v,D,P]})]}),(0,$.jsx)("div",{})]})})}},63747:function(e){e.exports={container:"PipelineBuilder_container__Vpu_6",expanded:"PipelineBuilder_expanded__kvweU",collapsed:"PipelineBuilder_collapsed__xSdow"}}}]);